//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccessLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    using mod = RepoModel;
    public partial class DALEntities : DbContext
    {
        public DALEntities()
            : base("name=DALEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<mod.book> books { get; set; }
        public virtual DbSet<mod.Login> Logins { get; set; }
        public virtual DbSet<mod.skill> skills { get; set; }
        public virtual DbSet<mod.userDetail> userDetails { get; set; }
    
        [DbFunction("DALEntities", "ufn_getSkills")]
        public virtual IQueryable<mod.ufn_getSkills_Result> ufn_getSkills(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<mod.ufn_getSkills_Result>("[DALEntities].[ufn_getSkills](@userName)", userNameParameter);
        }
    
        public virtual ObjectResult<mod.LoginByUsernamePassword_Result> LoginByUsernamePassword(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mod.LoginByUsernamePassword_Result>("LoginByUsernamePassword", usernameParameter, passwordParameter);
        }
    
        public virtual int usp_deleteSkills(string skills, string userName)
        {
            var skillsParameter = skills != null ?
                new ObjectParameter("skills", skills) :
                new ObjectParameter("skills", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_deleteSkills", skillsParameter, userNameParameter);
        }
    
        public virtual int usp_insertSkills(string skills, string trained, string userName)
        {
            var skillsParameter = skills != null ?
                new ObjectParameter("skills", skills) :
                new ObjectParameter("skills", typeof(string));
    
            var trainedParameter = trained != null ?
                new ObjectParameter("trained", trained) :
                new ObjectParameter("trained", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_insertSkills", skillsParameter, trainedParameter, userNameParameter);
        }
    
        public virtual int usp_updateSkills(string skills, string trained, string userName)
        {
            var skillsParameter = skills != null ?
                new ObjectParameter("skills", skills) :
                new ObjectParameter("skills", typeof(string));
    
            var trainedParameter = trained != null ?
                new ObjectParameter("trained", trained) :
                new ObjectParameter("trained", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_updateSkills", skillsParameter, trainedParameter, userNameParameter);
        }
    
        public virtual ObjectResult<usp_getAll_Result> usp_getAll()
        {
            var test = ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getAll_Result>("usp_getAll");
            return test;
        }
    }
}
